;;; sin(x) = 3*sin(x/3) - 4*sin^3(x/3)
;;; if x < 0.1, sin(x) = x
(define (cube x) (* x x x))
(define (p x) (- (* 3 x) (* 4 (cube x))))
(define (sine angle)
  (if (not (> (abs angle) 0.1))
      angle
      (p (sine (/ angle 3.0)))))

;;; a. how many times procedure p applied when (sine 12.15) is evaluted?
(let ((cnt 0))
  (define (cube x) (* x x x))
  (define (p x)
    (begin
      (set! cnt (+ cnt 1))
      (- (* 3 x) (* 4 (cube x)))))
  (define (sine angle)
    (if (not (> (abs angle) 0.1))
        angle
        (p (sine (/ angle 3.0)))))
  (sine 12.15)
  (print cnt))


;;; b. What is the order of growth in space and number of steps (as a function of a) used by the process generated by the sine procedure when (sine a) is evalued?
(define (sine angle expr)
  (begin (display (format expr angle))
         (display "\n")
         (if (not (> (abs angle) 0.1))
             angle
             (p (sine (/ angle 3.0)
                      (string-append "(p" expr ")")))))))
(sine 12.15)
